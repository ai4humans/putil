# shippable.yml
# Copyright (c) 2013-2015 Pablo Acosta-Serafini
# See LICENSE for details

language: python

# For getting data off build
# archive: true

python:
#  - "2.7"
  - "3.4"

before_install:
  ###
  # CI vendor setup
  ###
  - export PYTHONCMD=${SHIPPABLE_PYTHON}
  - echo "PYTHONCMD=${PYTHONCMD}"
  - export REPO_DIR=${SHIPPABLE_REPO_DIR}
  - echo "REPO_DIR=${REPO_DIR}"
  - export RESULTS_DIR=${REPO_DIR}/shippable
  - echo "RESULTS_DIR=${RESULTS_DIR}"
  ###
  # Install required system libraries
  ###
  - sudo apt-get update
  - sudo apt-get install -y curl
  - sudo apt-get install -y python-dev
  - sudo apt-get install -y python2.7-dev
  - sudo apt-get install -y libfreetype6-dev
  - if [ ! -f /usr/include/ft2build.h ]; then ln -s /usr/include/freetype2/ft2build.h /usr/include/.; fi
  - sudo apt-get install -y libjpeg-dev
  - sudo apt-get install -y liblapack-dev
  - sudo apt-get install -y libpng12-dev
  - sudo apt-get install -y gfortran
  - sudo apt-get install -y libatlas-dev
  - sudo apt-get install -y libatlas-base-dev
  - sudo apt-get install -y libatlas3gf-base
  - export LC_ALL=C
  ###
  # Set up environment
  ###
  - export PKG_NAME=$(echo $REPOSITORY_URL | sed -r "s|^.*/(.*)\.git|\1|g")
  - echo "PKG_NAME=${PKG_NAME}"
  - export INTERP=py"${VIRTUALENV_PYTHON//./}"
  - echo "INTERP=${INTERP}"
  - export PYTHON_MAJOR=$(echo ${VIRTUALENV_PYTHON} | sed -r 's/([0-9]).*/\1/g')
  - echo "PYTHON_MAJOR=${PYTHON_MAJOR}"
  - export PIPCMD=pip${PYTHON_MAJOR}
  - echo "PIPCMD=${PIPCMD}"
  #- export PYTHON_SITE_PACKAGES=/root/ve/lib/python"${VIRTUALENV_PYTHON}"/site-packages
  - export PYTHON_SITE_PACKAGES=$(pip show pytest | grep "Location:*" | sed -r "s/^.*Location: (.*)/\1/g")
  - echo "PYTHON_SITE_PACKAGES=${PYTHON_SITE_PACKAGES}"
  - export SOURCE_DIR=${PYTHON_SITE_PACKAGES}/${PKG_NAME}
  - echo "SOURCE_DIR=${SOURCE_DIR}"
  #- export EXTRA_DIR=/root/ve/usr/share/${PKG_NAME}
  - export EXTRA_DIR=/usr/share/${PKG_NAME}
  - echo "EXTRA_DIR=${EXTRA_DIR}"
  - export PYTHONPATH=${PYTHONPATH}:${PYTHON_SITE_PACKAGES}:${SOURCE_DIR}:${EXTRA_DIR}:${EXTRA_DIR}/tests:${EXTRA_DIR}/docs:${EXTRA_DIR}/docs/support
  - echo "PYTHONPATH=${PYTHONPATH}"
  - export PYTESTCMD=py.test
  - echo "PYTESTCMD=${PYTESTCMD}"
  - export COV_FILE=${SOURCE_DIR}/.coveragerc_ci_${INTERP}
  - echo "COV_FILE=${COV_FILE}"
  ###
  # Set up pip
  ###
  - if which ${PIPCMD} >/dev/null; then export PIP_INSTALLED=1; else export PIP_INSTALLED=0; fi
  - echo "PIP_INSTALLED=${PIP_INSTALLED}"
  - if [ "${PIP_INSTALLED}" == 0 ]; then sudo curl https://bootstrap.pypa.io/get-pip.py > get-pip.py; fi
  - if [ "${PIP_INSTALLED}" == 0 ]; then sudo ${PYTHONCMD} get-pip.py; fi
  - if [ "${PIP_INSTALLED}" == 1 ]; then sudo ${PIPCMD} install --upgrade pip; fi
  - sudo ${PIPCMD} install --upgrade setuptools
  - sudo ${PIPCMD} install wheel

install:
  ###
  # Install package dependencies
  ###
  #- $PIPCMD install --verbose --install-option="--prefix=/root/ve" --upgrade --force-reinstall -r requirements.txt
  - $PIPCMD install --verbose --upgrade -r requirements.txt
  ###
  # Report version numbers for all dependencies
  ###
  - $PIPCMD freeze
  - dpkg --status curl
  - dpkg --status python-dev
  - dpkg --status python2.7-dev
  - dpkg --status libfreetype6-dev
  - dpkg --status libjpeg-dev
  - dpkg --status liblapack-dev
  - dpkg --status libpng12-dev
  - dpkg --status gfortran
  - dpkg --status libatlas-dev
  - dpkg --status libatlas-base-dev
  - dpkg --status libatlas3gf-base

before_script:
  ###
  # Create directories for reports and images
  ###
  - mkdir -p ${RESULTS_DIR}/testresults
  - mkdir -p ${RESULTS_DIR}/codecoverage
  - mkdir -p ${RESULTS_DIR}/images

script:
  ###
  # Install package
  ###
  - $PYTHONCMD setup.py sdist
  - PKG_VERSION=$(grep __version__ ${REPO_DIR}/${PKG_NAME}/__init__.py | sed -e "s/.*__version__ = '\(.*\)'/\1/g")
  - echo "PKG_VERSION=${PKG_VERSION}"
  - $PIPCMD install --verbose --upgrade --no-deps --force-reinstall dist/${PKG_NAME}-${PKG_VERSION}.tar.gz
  ###
  # Get images off build:
  ###
  # - $PYTHONCMD ${REPO_DIR}/docs/support/plot_example_1.py ${RESULTS_DIR}/images/test_image.png
  # - ./sbin/gen_ref_images.py ${RESULTS_DIR}/images
  ###
  # Write coverage configuration file
  ###
  - $PYTHONCMD ./sbin/coveragerc_manager.py 'ci' 1 ${INTERP} ${PYTHON_SITE_PACKAGES}
  - cat ${COV_FILE}
  ###
  # Change to tests sub-directory to mimic Tox conditions
  ###
  - cd ${EXTRA_DIR}/tests
  ###
  # Run tests
  ###
  - $PYTESTCMD --doctest-glob='*.rst' ${EXTRA_DIR}/docs
  - $PYTESTCMD --doctest-modules ${SOURCE_DIR}
  - $PYTESTCMD -s -vv --junitxml=${RESULTS_DIR}/testresults/pytest.xml
  - $PYTESTCMD -x --cov-config ${COV_FILE} --cov ${SOURCE_DIR} --cov-report xml

notifications:
  on_success: change
  on_failure: always
